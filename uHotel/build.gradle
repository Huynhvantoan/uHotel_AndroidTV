apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

int MILLIS_IN_MINUTE = 1000 * 60
int minutesSinceEpoch = System.currentTimeMillis() / MILLIS_IN_MINUTE
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tool
    defaultConfig {
        applicationId build_versions.app_id
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.versionCode
        versionName build_versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    signingConfigs {
        Key {
            try {
                storeFile file(key_store.keystore)
                storePassword key_store.keystorePass
                keyAlias key_store.alias
                keyPassword key_store.aliasPass
            }
            catch (ignored) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ACUCORE_PATH", '"http://lv-api.acuteksolutions.com"'
            buildConfigField "String", "ACUTOOL_PATH", '"http://lv-acutool.acuteksolutions.com"'
            buildConfigField "String", "ACUMW_PATH", '"http://bsdev.acuteksolutions.com"'
            buildConfigField "String", "VOD_IMAGE_URL", '"http://bsdev.acuteksolutions.com/restapi/rest/{regionId}/images/"'
            buildConfigField "String", "TIME_SHIFT_PLAYBACK", '"http://lv-timeshifttv-dev.acuteksolutions.com/timeshifttv/playback/%1$s/%2$s.m3u8?start=%3$s&end=%4$s&continuous=%5$s"'
            buildConfigField "String", "WEB_SOCKET_PATH", '"ws://lv-acutool.acuteksolutions.com/devices/dcs"'
            buildConfigField "String", "APP_UPDATE_URL_RELEASE", '"http://tuk-apk.acuteksolutions.com/uhotel/release/update_debug.xml"'
            buildConfigField "String", "APP_UPDATE_URL_STAGING", '"http://tuk-apk.acuteksolutions.com/uhotel/stage/update_debug.xml"'
            buildConfigField "String", "STREAM_APP_UPDATE_URL", '"http://tuk-apk.acuteksolutions.com/uhotel/stage/stream/%1$s"'
            buildConfigField "String", "ROOM_CODE_URL", '"http://tuk-apk.acuteksolutions.com/uhotel/roomcode.xml"'
            manifestPlaceholders = [sharedUserId:"com.acuteksolution.anyname"]

        }
        /*uhotel premium TV: 10.17.16.xx
        * original: 10.17.12.xx*/
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    key_store.proguard_rules, key_store.proguard_rx, key_store.proguard_square, key_store.proguard_support
            buildConfigField "String", "ACUCORE_PATH", '"http://10.17.16.11:8181"'
            buildConfigField "String", "ACUTOOL_PATH", '"http://10.17.16.12:8080"'
            buildConfigField "String", "ACUMW_PATH", '"http://10.17.16.10"'
            buildConfigField "String", "VOD_IMAGE_URL", '"http://10.17.16.10/restapi/rest/{regionId}/images/"'
            buildConfigField "String", "TIME_SHIFT_PLAYBACK", '"http://10.17.16.16:8080/timeshifttv/playback/%1$s/%2$s.m3u8?start=%3$s&end=%4$s&continuous=%5$s"'
            buildConfigField "String", "WEB_SOCKET_PATH", '"ws://10.17.16.12:8080/devices/dcs"'
            buildConfigField "String", "APP_UPDATE_URL_RELEASE", '"http://10.17.16.252/ota/uHotel/release/update_release.xml"'
            buildConfigField "String", "APP_UPDATE_URL_STAGING", '"http://10.17.16.252/ota/uHotel/staging/update_release.xml"'
            buildConfigField "String", "STREAM_APP_UPDATE_URL", '"http://10.17.16.252/streaming_apk/%1$s"'
            buildConfigField "String", "ROOM_CODE_URL", '"http://10.17.16.252/uhotel/roomcode.xml"'
            signingConfig signingConfigs.Key
            manifestPlaceholders = [sharedUserId:"android.uid.system"]
        }
        poc {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    key_store.proguard_rules, key_store.proguard_rx, key_store.proguard_square, key_store.proguard_support
            buildConfigField "String", "ACUCORE_PATH", '"http://poc-acucore.acuteksolutions.com"'
            buildConfigField "String", "ACUTOOL_PATH", '"http://poc-acutool.acuteksolutions.com"'
            buildConfigField "String", "ACUMW_PATH", '"http://poc-acumw.acuteksolutions.com"'
            buildConfigField "String", "VOD_IMAGE_URL", '"http://poc-acumw.acuteksolutions.com/restapi/rest/{regionId}/images/"'
            buildConfigField "String", "TIME_SHIFT_PLAYBACK", '"http://lv-timeshifttv-dev.acuteksolutions.com/timeshifttv/playback/%1$s/%2$s.m3u8?start=%3$s&end=%4$s&continuous=%5$s"'
            buildConfigField "String", "WEB_SOCKET_PATH", '"ws://10.17.16.12:8080/devices/dcs"'
            buildConfigField "String", "APP_UPDATE_URL_RELEASE", '"http://10.17.16.252/ota/demo/uhotelprm/release/update_release.xml"'
            buildConfigField "String", "APP_UPDATE_URL_STAGING", '"http://10.17.16.252/ota/demo/uhotelprm/staging/update_release.xml"'
            buildConfigField "String", "STREAM_APP_UPDATE_URL", '"http://10.17.16.252/streaming_apk/%1$s"'
            buildConfigField "String", "ROOM_CODE_URL", '"http://10.17.16.252/uhotel/roomcode.xml"'
            signingConfig signingConfigs.Key
            debuggable true
        }
    }
    lintOptions {
        textOutput "stdout"
        textReport true
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        abortOnError false
        lintConfig file("$projectDir/lint.xml")
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'META-INF/license/LICENSE.base64.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/MANIFEST.MF'
    }
    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        maxProcessCount 4
        preDexLibraries false
        javaMaxHeapSize "8g"
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.mergedFlavor.versionCode = minutesSinceEpoch
            variant.mergedFlavor.versionName = minutesSinceEpoch + "-" + variant.flavorName
        }
    }
    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res-main',
                    file('src/main/res-screen')
                            .listFiles()
                            .each { res.srcDirs += it.path }
            ]
        }
    }
}
kotlin {
    experimental {
        coroutines "enable"
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':Core')
    implementation deps.multidex
    //Retrofit
    for (dependency in deps.retrofit) {
        implementation dependency.value
    }
    //Library
    for (dependency in deps.library) {
        implementation dependency.value
    }
}
